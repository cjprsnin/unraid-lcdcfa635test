<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "lcd_manager">
<!ENTITY author    "cjprsnin">
<!ENTITY version   "2025.02.10">
<!ENTITY launch    "LCDSettings">
<!ENTITY gitURL    "https://raw.githubusercontent.com/cjprsnin/unraid-lcdcfa635test/refs/heads/master/">
<!ENTITY pluginURL "&gitURL;/lcd_manager.plg">
<!ENTITY supportURL	"https://forums.unraid.net/topic/136952-plugin-lcd_manager/">
<!ENTITY packages	"/boot/config/plugins/&name;/packages">
<!ENTITY plgPATH   "/boot/config/plugins/&name;">
<!ENTITY md5		"fbc49555aa7bd1939cd05b5bf8f12043">
]>

<PLUGIN name="&name;"
		author="&author;"
		launch="&launch;"
		version="&version;"
		pluginURL="&pluginURL;"
		support="&supportURL;"
		icon="lcd.png"
		min="6.8.0">

<CHANGES>
##LCD_Manager
###&version;
  - added lis driver

###2024.11.23
  - Made some changes to allow for setting up CFA-635 and proper handling my network setup
  
###2024.11.23

  - Add libhid and option for mdm166a on the drop down.

###2024.11.21

  - Update lcdproc package to include additional drivers.

###2023.11.07
  
  - Add screen size option to settings.

###2023.04.08

  - Initial Package.



</CHANGES>

<!--
dependency files
-->
<!--
The 'pre-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>

# Check to see if new install.

if [ ! -d "/boot/config/plugins/&name;" ]
then
 mkdir "/boot/config/plugins/&name;"
fi

</INLINE>
</FILE>

<!--
The 'lcdproc-package' file.
-->
<FILE Name="&packages;/lcdproc-20250210.tgz" Run="upgradepkg --install-new ">
<URL>&gitURL;/lcdproc-20250210.tgz</URL>
</FILE>

<!--
The 'libhid-package' file.
-->
<FILE Name="&packages;/libhid-0.2.16-x86_64-2_slack.txz" Run="upgradepkg --install-new ">
<URL>&gitURL;/libhid-0.2.16-x86_64-2_slack.txz</URL>
</FILE>


<!--
Get the plugin bundle.
-->
<FILE Name="&packages;/&name;-&version;.tar.gz" Run="upgradepkg --install-new &packages;/&name;*%&packages;/&name;-&version;.tar.gz">
<URL>"&gitURL;/&name;-&version;.tar.gz"</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-updgrade' script.
-->
<FILE Run="/bin/bash">
<INLINE>
echo "Removing previous versons now upgrade has completed."
echo
# Remove old 'bundle' files.
rm -f $(ls &packages;/&name;*.txz 2>/dev/null | grep -v '&version;')
</INLINE>
</FILE>

<!--
USB_Manager background start script.
-->
<FILE Name="/tmp/start_lcd_manager" Mode="0770">
<INLINE>
#!/bin/bash
# Copy configuration files to tmp file system.
/usr/local/emhttp/plugins/&name;/scripts/copy_config.sh 2>/dev/null

# Remove the background start script.
rm -f /tmp/start_lcd_manager 2>/dev/null
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/&name;.cfg">
<INLINE>
<![CDATA[
]]>
</INLINE>
</FILE>


<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
# Define Functions

#Define Variables

KERNEL_V="$(uname -r)"
PACKAGE="usbip"
DL_URL="https://github.com/ich777/unraid-plugins-repo/releases/download/$KERNEL_V"

# Install the plugin bundle.
# Create plugin directory
mkdir /boot/config/plugins/&name; 2>/dev/null
mkdir /usr/local/emhttp/plugins/&name; 2>/dev/null
mkdir -p /tmp/&name;/config 2>/dev/null


# Adjust plugin permissions.
chmod 755 -R /usr/local/emhttp/plugins/&name; 2>/dev/null

# Fix permissions of executable files
chmod +x /usr/local/emhttp/plugins/&name;/scripts/* /usr/local/emhttp/plugins/&name;/event/*

# Create a symlink to USB_Manager scripts.
ln -sf /usr/local/emhttp/plugins/&name;/scripts/rc.lcd_manager /usr/local/sbin

# Copy Config to tmp and load modules.
at -M -f /tmp/start_lcd_manager now 2>/dev/null


echo 
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " "
echo " Copyright 2016-2020, &author;"
echo " Version: &version;"
echo ""
echo "-----------------------------------------------------------"
echo 
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>

#Define Variables

# Remove installed packages
find "&packages;/" -type f -iname "*.txz" -delete

rm -f /tmp/plugins/&name;.plg 
rm -r /tmp/&name;

# Remove all plugin files from emhttp.
removepkg &packages;/&name;-&version;.tar.gz 
#removepkg "&packages;/&name;/packages/${KERNEL_V%%-*}/${PACKAGE}-1.txz"
#depmod -a > /dev/null

echo 
echo "-----------------------------------------------------------"
echo " &name; has been uninstalled."
echo "-----------------------------------------------------------"
echo 

</INLINE>
</FILE>

</PLUGIN>
